name: FOODGRAM workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    name: Flake8 and isort tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8 --exclude=recipe/migrations/,venv/,users/migrations/,foodgram/settings.py


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Create a version.month.day tag for the container repositories
      - name: Create Container Tag
        id: date
        run: |
          export MONTH=`date +'%m'`
          export DAY=`date +'%d'`
          TAG=1.$MONTH.$DAY
          echo $TAG
          export TAG
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
            ${{ secrets.DOCKER_USERNAME }}/foodgram:${{ steps.date.outputs.TAG }}

  magic_deploy:
    name: Deploy to server with remote docker-compose
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install SSH key to github server
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1.1.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
          ssh-host: ${{ secrets.IP_HOST }}

      - name: Install correct version of docker-compose to avoid openssl issue
        run: |
          sudo pip install docker-compose
          sudo pip install dump-env

      - name: Add environment variables
        run: |
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env
          echo DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }} >> .env
          echo DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }} >> .env

      - name: Rename production docker-compose.yaml
        run: |
          mv docker-compose.yaml docker-compose-dev.yaml
          mv docker-compose-prod.yaml docker-compose.yaml

      - name: Remote docker-compose down/up using --context (zero files)
        run: |
          docker context create remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.IP_HOST }}"
          docker context use remote
          docker image prune -f
          docker pull matakov/foodgram:latest
          docker-compose --context remote down
          docker volume rm foodgram-project_static
          docker-compose --context remote up -d --force-recreate --build

  send_message:
    name: Send telegram notification
    runs-on: ubuntu-latest
    needs: magic_deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} done!